{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","camion","paquete","input","setInput","handleChange","e","target","name","value","prevInput","className","type","onChange","placeholder","onClick","result","paquete1","paquete2","alert","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAmFeA,MA/Ef,WAAgB,IAAD,EAEcC,mBAAS,CAClCC,OAAQ,GACRC,QAAS,KAJE,mBAENC,EAFM,KAECC,EAFD,KA4Bf,SAASC,EAAaC,GAAE,MAEAA,EAAEC,OAAjBC,EAFe,EAEfA,KAAMC,EAFS,EAETA,MACbL,GAAS,SAAAM,GACP,kCACKA,GADL,kBACgBF,EAAOC,OASzB,OACE,sBAAKE,UAAU,MAAf,UAAqB,uBACnB,iCACM,uBACAH,KAAK,SACLI,KAAK,SACLH,MAAON,EAAMM,MACbI,SAAUR,EACVS,YAAY,gBANlB,IAMmC,uBAE7B,uBACAN,KAAK,WACLI,KAAK,SACLH,MAAON,EAAMM,MACbI,SAAUR,EACVS,YAAY,YAEZ,uBACA,uBACAN,KAAK,WACLI,KAAK,SACLH,MAAON,EAAMM,MACbI,SAAUR,EACVS,YAAY,YAEZ,uBAEA,wBAAQC,QA7DlB,SAAeT,GAEb,IAOMU,GANIb,EAAMF,OAMkB,KALtBE,EAAMc,SACNd,EAAMe,UAMlB,KAAGF,EAAS,IAGR,OAAOG,MAAM,6BAA4BH,GAFzCG,MAAM,mBAAkBH,IAiDpB,uBAGJ,8BACE,mBAAGI,GAAG,SAAN,4BCjEKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ff9b33e.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport './App.css';\n\nfunction App() {\n\n  const [input, setInput ] = useState({\n    camion: '',\n    paquete: []\n  })\n\n\n  function start(e){    \n    //console.log(input)\n    const newInput = {\n      camion: input.camion,\n      paquete1: input.paquete1,\n      paquete2: input.paquete2\n    }\n\n    const sum = newInput.paquete1 + newInput.paquete2\n    const result = (newInput.camion - 30) / sum\n\n    if(result < 30 ){      \n        alert('Camión lleno ' + result)\n      }else{\n        return alert('Aún con capacidad por: ' + result )\n      }\n\n    //console.log(sum)\n  }\n\nfunction handleChange(e){\n  //e.preventDefault()\n  const {name, value} = e.target\n  setInput(prevInput => {\n    return{\n      ...prevInput,[name]: value\n    }\n  })\n}\n\n/* function Result(props) {\n  let result = camion / paquete\n} */\n\n  return (\n    <div className=\"App\"><br />\n      <form>\n            <input \n            name=\"camion\"\n            type=\"number\"\n            value={input.value}\n            onChange={handleChange}\n            placeholder=\"Camion size\" /> <br />\n\n            <input \n            name=\"paquete1\"\n            type=\"number\"\n            value={input.value}\n            onChange={handleChange}\n            placeholder=\"paquete\"\n            />\n            <br />\n            <input \n            name=\"paquete2\"\n            type=\"number\"\n            value={input.value}\n            onChange={handleChange}\n            placeholder=\"paquete\"\n            />\n            <br />\n\n            <button onClick={start}>Submit</button>\n        </form>\n\n        <div>\n          <p id=\"result\">Result: {}</p>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}